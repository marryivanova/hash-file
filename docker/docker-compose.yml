version: '3.8'

services:
  api:
    build:
      context: ../
      dockerfile: docker/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - APP_HOST=${HOST:-0.0.0.0}
      - APP_PORT=${PORT:-8000}
      - APP_DEBUG=${DEBUG:-False}
      - DB_HOST=db
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
    volumes:
      - ../:/app
    command: >
      bash -c "if [ $$APP_DEBUG = 'True' ]; then 
        python main.py; 
      else 
        gunicorn --bind 0.0.0.0:8000 --workers 4 main:app; 
      fi"
    depends_on:
      db:
        condition: service_healthy
    restart: always

  db:
    image: postgres:14
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

volumes:
  postgres_data: